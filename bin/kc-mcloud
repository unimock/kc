#!/bin/bash
. /opt/kc/etc/config


##########################################################################################################
if [ "$1" = "list" ] ; then
  virsh list --all
  exit 0
fi

if [ "$2" = "" ] ; then
  echo ""
  echo "usage: `basename $0` create|delete|start|stop <server-name> [...]"
  echo ""
  exit 0
fi

CMD=$1
shift

HNAME=$1
if [ "$HNAME" = "" ] ; then
  echo no hostname given
  exit 1
fi
shift


##########################################################################################################
if [ "$CMD" = "pre" ] ; then
  TNAME=$mcloud-ubuntu-16.04
  virsh shutdown  ${TNAME}
  virsh undefine  ${TNAME}
  rm                       ${KC_TSP_DIR}/images/$TNAME.qcow2
  qemu-img create -f qcow2 ${KC_TSP_DIR}/images/$TNAME.qcow2 5G
  chown libvirt-qemu:kvm   ${KC_TSP_DIR}/images/$TNAME.qcow2
  # KVM:
  #   HD: mcloud-ubuntu-16.04.qcow2
  #   Nme: mcloud-ubuntu-16.04
  #   Add Hardware -> Channel -> guest-agent
  #   Guest-Net
  # Ubuntu-Installation:
  #   * English, German Keyboard
  #   * Nmae: ubuntu
  #   * madmin #a
  #   * nur / Partition, no swap , bootable-Flag
  #   * openssh-server
  #   * Login madmin #a
  #   * sudo passwd root #root
  #   * exit
  #   * login root
  #   * deluser  --remove-all-files madmin
  #   * apt-get update ; apt-get -y dist-upgrade ; apt-get autoremove ; apt-get install ; apt-get install qemu-guest-agent
  # init 0
fi
##########################################################################################################
if [ "$CMD" = "create" ] ; then
  if [ "$6" = "" ] ; then
    echo ""
    echo "missing parameter :"
    echo ""
    echo "         <image>         <hd>  <cpu>  <mem>  <swap>  <authorized_keys-file>"
    echo "    mcloud-ubuntu-16.04   8G     2      2G      2G   /root/.ssh/id_rsa.pub"
    echo ""
    exit 1
  fi
  IMAGE="$1"
  SIZE="$2"
  CPU="$3"
  MEM="$4"
  SWAP="$5"
  AKEY="$6"

  # TODO: check if image or machine exist already 

  TDIR=$( mktemp -d )

  cp -va ${KC_TSP_DIR}/images/${IMAGE}.qcow2  ${KC_TSP_DIR}/images/${HNAME}.qcow2
  qemu-img resize ${KC_TSP_DIR}/images/${HNAME}.qcow2  $SIZE
  cp -va ${KC_TSP_DIR}/images/${HNAME}.qcow2      ${TDIR}/x.qcow2
  virt-resize --expand /dev/sda1 ${TDIR}/x.qcow2 ${KC_TSP_DIR}/images/${HNAME}.qcow2
  rm ${TDIR}/x.qcow2

  MNT=${TDIR}/mnt
  mkdir -p $MNT
  guestmount -a ${KC_TSP_DIR}/images/${HNAME}.qcow2 -m /dev/sda1             $MNT
  echo "${HNAME}"  > $MNT/etc/hostname
  mkdir -p $MNT/root/.ssh
  cp ${AKEY}  $MNT/root/.ssh/authorized_keys
  chown root:root $MNT/root/.ssh/authorized_keys
  echo "create swap file ..."
  cp -a $MNT/etc/rc.local $MNT/etc/rc.local-orig
  echo "#!/bin/sh"                         > $MNT/etc/rc.local
  echo "fallocate -l $SWAP /swapfile ; chmod 600 /swapfile ; mkswap /swapfile ; swapon /swapfile ; echo '/swapfile none swap sw 0 0' >> /etc/fstab" >> $MNT/etc/rc.local
  echo "mv -f /etc/rc.local-orig /etc/rc.local"  >> $MNT/etc/rc.local
  echo "exit 0"                                  >> $MNT/etc/rc.local
  # umount
  guestunmount $MNT
  rmdir $MNT
  #
  XML=${TDIR}/x.xml
  virsh dumpxml ${IMAGE}                                   > $XML
  sed -i "s|<name>.*</name>|<name>${HNAME}</name>|g"   $XML
  # hardware addresses need to be removed, libvirt will assign
  # new addresses automatically
  sed -i '/uuid/d'                                                    $XML
  sed -i '/mac address/d'                                             $XML
  sed -i "s|${IMAGE}.qcow2|${HNAME}.qcow2|g"                 $XML
  M=$( echo $MEM  | numfmt --from=iec | numfmt --to-unit=1024 )
  sed -i "s|<memory unit='KiB'>.*</memory>|<memory unit='KiB'>${M}</memory>|" $XML
  sed -i "s|<currentMemory unit='KiB'>.*</currentMemory>|<currentMemory unit='KiB'>${M}</currentMemory>|" $XML
  sed -i "s|<vcpu placement='static'>.*</vcpu>|<vcpu placement='static'>$CPU</vcpu>|" $XML
  virsh define --file $XML
  rm $XML
  rmdir ${TDIR}
  virsh start    ${HNAME}
fi
##########################################################################################################
if [ "$CMD" = "start" ] ; then
  virsh start    ${HNAME}
fi
##########################################################################################################
if [ "$CMD" = "stop" ] ; then
  virsh shutdown    ${HNAME}
fi
##########################################################################################################
if [ "$CMD" = "delete" ] ; then
  virsh shutdown  ${HNAME}
  virsh undefine  ${HNAME}
  rm -v ${KC_TSP_DIR}/images/${HNAME}.qcow2
fi

exit 0

